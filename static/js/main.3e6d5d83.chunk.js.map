{"version":3,"sources":["api/openWeather.js","TodayCard.js","DayCard.js","App.js","useLocation.js","index.js"],"names":["axios","create","baseURL","Wrap","styled","div","TodayCard","props","date","today","dt_txt","slice","time","className","cityName","main","temp","temp_max","temp_min","weather","description","src","icon","alt","DayCard","data","GlobalStyle","createGlobalStyle","App","useState","setData","lat","setLat","lon","setLon","errorMessage","setErrorMessage","useEffect","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","message","useLocation","getWeather","city","units","a","openWeather","get","params","appid","response","onClick","length","list","name","map","el","includes","key","dt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e6d5d83.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5\"\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodayCard = ({ ...props }) => {\n  const date = props.today.dt_txt.slice(5, 10);\n  const time = props.today.dt_txt.slice(11, 16);\n\n  return (\n    <Wrap>\n      <div className=\"header\">\n        <h2 className=\"weather-date\">Now </h2>\n        <span>\n          <span className=\"date\">{date}</span>{\" \"}\n          <span className=\"date\">{time}</span>\n        </span>\n      </div>\n\n      <div className=\"header\">\n        <h1 className=\"city\">{props.cityName}</h1>\n        <span className=\"temp\">{props.today.main.temp}&#8451;</span>\n        <span className=\"min_max\">\n          <span className=\"max\">{props.today.main.temp_max}&#8451;</span>\n          <span className=\"min\">{props.today.main.temp_min}&#8451;</span>\n        </span>\n      </div>\n\n      <h2 className=\"condition\">{props.today.weather[0].description}</h2>\n\n      <img\n        src={`http://openweathermap.org/img/wn/${props.today.weather[0].icon}@2x.png`}\n        alt=\"\"\n        className=\"icon\"\n      />\n    </Wrap>\n  );\n};\n\n//* styled-component < ðŸ’…>\nconst Wrap = styled.div`\n  width: 40%;\n  text-align: center;\n  border: solid 2px #222;\n  padding: 11px;\n  border-radius: 50px;\n\n  .weather-date {\n    display: inline-block;\n  }\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    flex-wrap: wrap;\n\n    .temp {\n      font-weight: 600;\n    }\n\n    .min_max {\n      display: inline-flex;\n      flex-direction: column;\n\n      .max {\n        color: #ff0000;\n      }\n      .min {\n        color: #0066ff;\n      }\n    }\n  }\n`;\n\nexport default TodayCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DayCard = ({ data }) => {\n  const date = data.dt_txt.slice(5, 10);\n  const time = data.dt_txt.slice(11, 16);\n\n  return (\n    <Wrap>\n      <div className=\"date\">{date}</div>\n      <div className=\"time\">{time}</div>\n      <span className=\"temp\">{data.temp}</span>\n      <h2 className=\"condition\">{data.weather[0].description}</h2>\n      <img\n        src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n        alt=\"\"\n        className=\"icon\"\n      />\n    </Wrap>\n  );\n};\n\n//* styled-component < ðŸ’…>\nconst Wrap = styled.div`\n  margin: 10px 10px;\n  border: 2px solid #999;\n  border-radius: 20px;\n  padding: 1rem;\n\n  text-align: center;\n`;\n\nexport default DayCard;\n","import React, { useState, useEffect } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport openWeather from \"./api/openWeather\";\nimport TodayCard from \"./TodayCard\";\nimport DayCard from \"./DayCard\";\n\nimport useLocation from \"./useLocation\";\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [lat, lon, errorMessage] = useLocation();\n\n  const getWeather = async (city, units) => {\n    const response = await openWeather.get(\"/forecast\", {\n      params: {\n        lat: lat,\n        lon: lon,\n        appid: \"94a45afae7581212919abed641621327\",\n        units: \"metric\"\n      }\n    });\n    setData(response.data);\n  };\n\n  return data === null ? (\n    <>\n      <GlobalStyle />\n      <button\n        className=\"getWeather\"\n        onClick={errorMessage.length !== 0 ? null : getWeather}\n      >\n        get Weather\n      </button>\n    </>\n  ) : (\n    <Wrap>\n      <GlobalStyle />\n      <TodayCard today={data.list[0]} cityName={data.city.name} />\n      <div className=\"dayCard-wrap\">\n        {data.list.map(el => {\n          return el.dt_txt.includes(\"12:00:00\") ? (\n            <DayCard data={el} key={el.dt} />\n          ) : null;\n        })}\n      </div>\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  border: solid 6px #222;\n  padding: 25px;\n  border-radius: 50px;\n  box-shadow: 6px 7px #f60;\n\n  .dayCard-wrap {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n`;\nconst GlobalStyle = createGlobalStyle`\nbody, html{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 5%;\n\nbutton {\n\tborder: none;\n\tbackground: none;\n\tcursor: pointer;\n\tborder: solid 3px #222;\n\tborder-radius: 50px;\n\tbox-shadow: 2px 4px #f60;\n\tpadding: 10px;\n\twidth: 13rem;\n\theight: 5rem;\n\tfont-size: 1.5rem;\n  &:hover{\n    transform: translate3d(2px, 2px, 2px)\n  }\n}\n}\n`;\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport default () => {\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setLat(position.coords.latitude);\n        setLon(position.coords.latitude);\n      },\n      err => setErrorMessage(err.message)\n    );\n  }, []);\n\n  return [lat, lon, errorMessage];\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}